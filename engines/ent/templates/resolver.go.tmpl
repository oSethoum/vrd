package resolvers

import (
	"{{.Package}}/db" 
	"{{.Package}}/ent"
	"{{.Package}}/graph/generated"

	"github.com/99designs/gqlgen/graphql"
	
	"sync"
)

// This file will not be regenerated automatically.
//
// It serves as dependency injection for your app, add any dependencies you require here.

type Resolver struct {
	Client *ent.Client

	{{range .Nodes}}
	{{.Name}}Listenners        		  map[string]{{.Name}}Listenner
	{{.Name}}ListennersMutext 			  sync.Mutex
	{{.Pascals .Name}}Listenners       map[string]{{.Pascals .Name}}Listenner
	{{.Pascals .Name}}ListennersMutext sync.Mutex
	{{end}}
}

var schema *graphql.ExecutableSchema

func ExecutableSchema() graphql.ExecutableSchema {
	if schema == nil {
		schema = new(graphql.ExecutableSchema)
		*schema = generated.NewExecutableSchema(generated.Config{Resolvers: &Resolver{
			Client: db.DB,

			{{range .Nodes}}
			{{.Name}}Listenners:        			make(map[string]{{.Name}}Listenner),
			{{.Name}}ListennersMutext:  			sync.Mutex{},
			{{.Pascals .Name}}Listenners:       make(map[string]{{.Pascals .Name}}Listenner),
			{{.Pascals .Name}}ListennersMutext: sync.Mutex{},
			{{end}}
		}})
	}

	return *schema
}